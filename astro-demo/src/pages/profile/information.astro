---
import UserDashboard from "../../components/user/UserDashboard.astro";
import { api } from "../,,/../../services/apiroute"

const jwt = Astro.cookies.get("jwt");
console.log(jwt?.value);
if (jwt?.value == undefined) {
  return Astro.redirect("/auth/login");
}
let userData;
let directionsData;

if (Astro.request.method === "GET") {
  try {
    const response = await fetch(`${api}auth/me`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${jwt?.value}`,
      },
    });

    if (response.ok) {
      userData = await response.json();
    } else {
      console.log("Error al obtener los datos del usuario");
    }
  } catch (error) {
    if (error instanceof Error) {
      console.log(error.message);
    }
  }
  try {
    const response = await fetch(
      `${api}profile/${userData?.id}/address`,
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${jwt?.value}`,
        },
      }
    );
    console.log(response);
    if (response.ok) {
      directionsData = await response.json();
    } else {
      console.log("Error al obtener los datos del usuario");
    }
  } catch (error) {
    if (error instanceof Error) {
      console.log(error.message);
    }
  }
}

const isSupplier = !!userData.supplier;
const supplierData = userData.supplier;



console.log(isSupplier);
console.log(supplierData);

console.log(userData);
console.log(userData.supplier);
console.log(directionsData);


interface Direction {
	street1: string;
	street2: string;
	city: string;
	country: string;
}

console.log(directionsData);

---

<UserDashboard>
  <section>
    <h2 class="text-center font-bold text-xl my-5">General Information</h2>
    <div class="flex flex-col gap-5">
      <p class="text-lg">
        Name: <span class="font-bold">{userData.firstName}</span>
      </p>
      <p class="text-lg">
        Last Name: <span class="font-bold">{userData.lastName}</span>
      </p>
      <p class="text-lg">
        Username: <span class="font-bold">{userData.username}</span>
      </p>
      <p class="text-lg">
        Email: <span class="font-bold">{userData.email}</span>
      </p>
      <p class="text-lg">
        Directions: {directionsData.map ((direction: Direction) => (
		  <span class="font-bold">{direction.street1},</span>
		  <span class="font-bold">{direction.street2}</span>
		  <span class="font-bold">{direction.city},</span>
		  <span class="font-bold">{direction.country}</span>
		  <br/>
		))}
      </p>
    { () =>
      {
        if (isSupplier == true) {
          console.log(isSupplier);
          return(
            <>
            <p class="text-lg">
              Company name:
              <span class="font-bold">{supplierData.companyName}</span>
            </p>
            <p class="text-lg">
              Company phone:
              <span class="font-bold">{supplierData.companyPhone}</span>
            </p>
          </>
          )
        }
      }       
    }
    </div>
  </section>
</UserDashboard>

<style>
  body {
    background-color: #0d0f14; /* Color de fondo blanco */
    background-image:
      linear-gradient(90deg, rgba(0, 0, 0, 0.2) 1px, transparent 1px),
      /* Líneas verticales */
        linear-gradient(rgba(0, 0, 0, 0.2) 1px, transparent 1px); /* Líneas horizontales */
    background-size:
      20px 20px,
      20px 20px; /* Tamaño de las celdas de la cuadrícula */
    background-repeat: repeat, repeat; /* Repetición de gradientes para formar la cuadrícula */
    margin: 0; /* Elimina el margen predeterminado del body */
    color: #fff;
  }
</style>
